package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/Trinitt/learn-graphql/graph/model"
	"github.com/google/uuid"
)

// CreatePostCommentReply is the resolver for the createPostCommentReply field.
func (r *mutationResolver) CreatePostCommentReply(ctx context.Context, postID string, userID string, commentText string, parentID string) (*model.PostCommentReply, error) {
	postCommentReply := &model.PostCommentReply{
		ID:          uuid.NewString(),
		ParentID:    parentID,
		PostID:      postID,
		UserID:      userID,
		CommentText: commentText,
	}
	return postCommentReply, r.DB.Create(&postCommentReply).Error
}

// DeletePostCommentReply is the resolver for the deletePostCommentReply field.
func (r *mutationResolver) DeletePostCommentReply(ctx context.Context, id string) (*model.PostCommentReply, error) {
	err := r.DB.Where("id = ?", id).Delete(&model.PostCommentReply{}).Error

	if err != nil {
		return nil, err
	}
	return &model.PostCommentReply{}, err
}

// GetPostCommentReplies is the resolver for the getPostCommentReplies field.
func (r *queryResolver) GetPostCommentReplies(ctx context.Context, parentID string) ([]*model.FetchPostCommentReplies, error) {
	panic(fmt.Errorf("not implemented: GetPostCommentReplies - getPostCommentReplies"))
}
