package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"time"

	"github.com/Trinitt/learn-graphql/graph/model"
)

// CreateGroupMember is the resolver for the createGroupMember field.
func (r *mutationResolver) CreateGroupMember(ctx context.Context, groupID string, memberID string, status string, role string) (*model.GroupMember, error) {
	groupMember := &model.GroupMember{
		MemberID: memberID,
		GroupID:  groupID,
		JoinedAt: time.Now().Format("2006-01-02 15:04:05"),
		Status:   status,
		Role:     role,
	}
	return groupMember, r.DB.Create(&groupMember).Error
}

// DeleteGroupMember is the resolver for the deleteGroupMember field.
func (r *mutationResolver) DeleteGroupMember(ctx context.Context, groupID string, memberID string) (*model.GroupMember, error) {
	err := r.DB.Where("group_id = ? AND member_id = ?", groupID, memberID).Delete(&model.GroupMember{}).Error

	if err != nil {
		return nil, err
	}
	return &model.GroupMember{}, err
}
